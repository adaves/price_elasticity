{
  "pipeline_date": "2025-06-24",
  "total_execution_time": 79.77101397514343,
  "notebooks_attempted": 3,
  "notebooks_succeeded": 2,
  "notebooks_failed": 1,
  "failed_notebooks": [
    "03_eda.ipynb"
  ],
  "detailed_results": [
    {
      "notebook": "01_data_loading.ipynb",
      "status": "success",
      "execution_time": 44.73186707496643,
      "stdout": "",
      "stderr": "[NbConvertApp] Converting notebook C:\\Users\\adaves\\OneDrive - Thai Union Group\\Documents\\elasticity\\notebooks\\01_data_loading.ipynb to notebook\nC:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\zmq\\_future.py:718: RuntimeWarning: Proactor event loop does not implement add_reader family of methods required for zmq. Registering an additional selector thread for add_reader support via tornado. Use `asyncio.set_event_loop_policy(WindowsSelectorEventLoopPolicy())` to avoid this warning.\n  self._get_loop()\n[NbConvertApp] Writing 64689 bytes to C:\\Users\\adaves\\OneDrive - Thai Union Group\\Documents\\elasticity\\notebooks\\01_data_loading.ipynb\n"
    },
    {
      "notebook": "02_data_cleaning.ipynb",
      "status": "success",
      "execution_time": 22.61001181602478,
      "stdout": "",
      "stderr": "[NbConvertApp] Converting notebook C:\\Users\\adaves\\OneDrive - Thai Union Group\\Documents\\elasticity\\notebooks\\02_data_cleaning.ipynb to notebook\nC:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\zmq\\_future.py:718: RuntimeWarning: Proactor event loop does not implement add_reader family of methods required for zmq. Registering an additional selector thread for add_reader support via tornado. Use `asyncio.set_event_loop_policy(WindowsSelectorEventLoopPolicy())` to avoid this warning.\n  self._get_loop()\n[NbConvertApp] Writing 90193 bytes to C:\\Users\\adaves\\OneDrive - Thai Union Group\\Documents\\elasticity\\notebooks\\02_data_cleaning.ipynb\n"
    },
    {
      "notebook": "03_eda.ipynb",
      "status": "failed",
      "execution_time": 12.36044955253601,
      "error": "Command '['C:\\\\Users\\\\adaves\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python313\\\\python.exe', '-m', 'jupyter', 'nbconvert', '--to', 'notebook', '--execute', '--inplace', '--ExecutePreprocessor.timeout=3600', 'C:\\\\Users\\\\adaves\\\\OneDrive - Thai Union Group\\\\Documents\\\\elasticity\\\\notebooks\\\\03_eda.ipynb']' returned non-zero exit status 1.",
      "stdout": "",
      "stderr": "[NbConvertApp] Converting notebook C:\\Users\\adaves\\OneDrive - Thai Union Group\\Documents\\elasticity\\notebooks\\03_eda.ipynb to notebook\nC:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\zmq\\_future.py:718: RuntimeWarning: Proactor event loop does not implement add_reader family of methods required for zmq. Registering an additional selector thread for add_reader support via tornado. Use `asyncio.set_event_loop_policy(WindowsSelectorEventLoopPolicy())` to avoid this warning.\n  self._get_loop()\nTraceback (most recent call last):\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\jupyter_core\\utils\\__init__.py\", line 154, in wrapped\n    asyncio.get_running_loop()\n    ~~~~~~~~~~~~~~~~~~~~~~~~^^\nRuntimeError: no running event loop\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"<frozen runpy>\", line 198, in _run_module_as_main\n  File \"<frozen runpy>\", line 88, in _run_code\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Scripts\\jupyter-nbconvert.EXE\\__main__.py\", line 7, in <module>\n    sys.exit(main())\n             ~~~~^^\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\jupyter_core\\application.py\", line 284, in launch_instance\n    super().launch_instance(argv=argv, **kwargs)\n    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\traitlets\\config\\application.py\", line 1075, in launch_instance\n    app.start()\n    ~~~~~~~~~^^\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nbconvert\\nbconvertapp.py\", line 420, in start\n    self.convert_notebooks()\n    ~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nbconvert\\nbconvertapp.py\", line 597, in convert_notebooks\n    self.convert_single_notebook(notebook_filename)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nbconvert\\nbconvertapp.py\", line 563, in convert_single_notebook\n    output, resources = self.export_single_notebook(\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n        notebook_filename, resources, input_buffer=input_buffer\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nbconvert\\nbconvertapp.py\", line 487, in export_single_notebook\n    output, resources = self.exporter.from_filename(\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n        notebook_filename, resources=resources\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nbconvert\\exporters\\exporter.py\", line 201, in from_filename\n    return self.from_file(f, resources=resources, **kw)\n           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nbconvert\\exporters\\exporter.py\", line 220, in from_file\n    return self.from_notebook_node(\n           ~~~~~~~~~~~~~~~~~~~~~~~^\n        nbformat.read(file_stream, as_version=4), resources=resources, **kw\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nbconvert\\exporters\\notebook.py\", line 36, in from_notebook_node\n    nb_copy, resources = super().from_notebook_node(nb, resources, **kw)\n                         ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nbconvert\\exporters\\exporter.py\", line 154, in from_notebook_node\n    nb_copy, resources = self._preprocess(nb_copy, resources)\n                         ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nbconvert\\exporters\\exporter.py\", line 353, in _preprocess\n    nbc, resc = preprocessor(nbc, resc)\n                ~~~~~~~~~~~~^^^^^^^^^^^\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nbconvert\\preprocessors\\base.py\", line 48, in __call__\n    return self.preprocess(nb, resources)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nbconvert\\preprocessors\\execute.py\", line 103, in preprocess\n    self.preprocess_cell(cell, resources, index)\n    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nbconvert\\preprocessors\\execute.py\", line 124, in preprocess_cell\n    cell = self.execute_cell(cell, index, store_history=True)\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\jupyter_core\\utils\\__init__.py\", line 158, in wrapped\n    return loop.run_until_complete(inner)\n           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\asyncio\\base_events.py\", line 719, in run_until_complete\n    return future.result()\n           ~~~~~~~~~~~~~^^\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nbclient\\client.py\", line 1062, in async_execute_cell\n    await self._check_raise_for_error(cell, cell_index, exec_reply)\n  File \"C:\\Users\\adaves\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nbclient\\client.py\", line 918, in _check_raise_for_error\n    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)\nnbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:\n------------------\n# ==========================================\n# PHASE 1: LOAD CLEANED DATA\n# ==========================================\n\nprint(\"\\U0001f504 Loading cleaned data...\")\n\ntry:\n    # First try auto-detection\n    df_clean = load_cleaned_data()\n    \nexcept Exception as e:\n    print(f\"Auto-detection failed: {e}\")\n    print(\"Trying explicit path...\")\n    \n    # Fallback: try explicit path from notebook directory\n    try:\n        df_clean = load_cleaned_data(\"../data/processed/iri_sales_data_clean.parquet\")\n    except Exception as e2:\n        print(f\"Explicit path also failed: {e2}\")\n        print(\"Trying direct pandas load...\")\n        \n        # Last resort: direct pandas load\n        import pandas as pd\n        df_clean = pd.read_parquet(\"../data/processed/iri_sales_data_clean.parquet\")\n\nprint(f\"\\u2705 Loaded {len(df_clean):,} rows and {len(df_clean.columns)} columns\")\nprint(f\"\\U0001f4ca Data shape: {df_clean.shape}\")\n\n# Get comprehensive summary\nsummary = get_cleaned_data_summary(df_clean)\n\nprint(\"\\n\\U0001f4cb CLEANED DATA SUMMARY:\")\nprint(\"=\" * 50)\nprint(f\"Total records: {summary['total_records']:,}\")\nprint(f\"Date range: {summary['date_range']['start']} to {summary['date_range']['end']}\")\nprint(f\"Time periods: {summary['date_range']['total_weeks']} weeks\")\nprint(f\"Geographic regions: {summary['geographic_coverage']['regions']}\")\nprint(f\"Unique products: {summary['product_coverage']['products']}\")\nprint(f\"Average unit price: ${summary['sales_metrics']['avg_unit_price']:.2f}\")\nprint(f\"Price range: ${summary['sales_metrics']['price_range']['min']:.2f} - ${summary['sales_metrics']['price_range']['max']:.2f}\")\n\n# Display sample data\nprint(\"\\n\\U0001f50d SAMPLE CLEANED DATA:\")\ndisplay(df_clean.head(3))\n------------------\n\n----- stdout -----\n\\U0001f504 Loading cleaned data...\n----- stderr -----\nINFO:src.utils.data_helpers:Loaded cleaned data: 1979310 rows, 37 columns from C:\\Users\\adaves\\OneDrive - Thai Union Group\\Documents\\elasticity\\data\\processed\\iri_sales_data_clean.parquet\n----- stdout -----\n\\u2705 Loaded 1,979,310 rows and 37 columns\n\\U0001f4ca Data shape: (1979310, 37)\n------------------\n\n\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mKeyError\u001b[39m                                  Traceback (most recent call last)\n\u001b[36mFile \u001b[39m\u001b[32m~\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3812\u001b[39m, in \u001b[36mIndex.get_loc\u001b[39m\u001b[34m(self, key)\u001b[39m\n\u001b[32m   3811\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m-> \u001b[39m\u001b[32m3812\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m_engine\u001b[49m\u001b[43m.\u001b[49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcasted_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   3813\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\n\u001b[36mFile \u001b[39m\u001b[32mpandas/_libs/index.pyx:167\u001b[39m, in \u001b[36mpandas._libs.index.IndexEngine.get_loc\u001b[39m\u001b[34m()\u001b[39m\n\n\u001b[36mFile \u001b[39m\u001b[32mpandas/_libs/index.pyx:196\u001b[39m, in \u001b[36mpandas._libs.index.IndexEngine.get_loc\u001b[39m\u001b[34m()\u001b[39m\n\n\u001b[36mFile \u001b[39m\u001b[32mpandas/_libs/hashtable_class_helper.pxi:7088\u001b[39m, in \u001b[36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[39m\u001b[34m()\u001b[39m\n\n\u001b[36mFile \u001b[39m\u001b[32mpandas/_libs/hashtable_class_helper.pxi:7096\u001b[39m, in \u001b[36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[39m\u001b[34m()\u001b[39m\n\n\u001b[31mKeyError\u001b[39m: 'quantity_sold'\n\nThe above exception was the direct cause of the following exception:\n\n\u001b[31mKeyError\u001b[39m                                  Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[2]\u001b[39m\u001b[32m, line 30\u001b[39m\n\u001b[32m     27\u001b[39m \u001b[38;5;28mprint\u001b[39m(\u001b[33mf\u001b[39m\u001b[33m\"\u001b[39m\u001b[33m\\U0001f4ca Data shape: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mdf_clean.shape\u001b[38;5;132;01m}\u001b[39;00m\u001b[33m\"\u001b[39m)\n\u001b[32m     29\u001b[39m \u001b[38;5;66;03m# Get comprehensive summary\u001b[39;00m\n\u001b[32m---> \u001b[39m\u001b[32m30\u001b[39m summary = \u001b[43mget_cleaned_data_summary\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdf_clean\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m     32\u001b[39m \u001b[38;5;28mprint\u001b[39m(\u001b[33m\"\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[33m\\U0001f4cb CLEANED DATA SUMMARY:\u001b[39m\u001b[33m\"\u001b[39m)\n\u001b[32m     33\u001b[39m \u001b[38;5;28mprint\u001b[39m(\u001b[33m\"\u001b[39m\u001b[33m=\u001b[39m\u001b[33m\"\u001b[39m * \u001b[32m50\u001b[39m)\n\n\u001b[36mFile \u001b[39m\u001b[32m~\\OneDrive - Thai Union Group\\Documents\\elasticity\\src\\utils\\data_helpers.py:521\u001b[39m, in \u001b[36mget_cleaned_data_summary\u001b[39m\u001b[34m(df)\u001b[39m\n\u001b[32m    495\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mget_cleaned_data_summary\u001b[39m(df: pd.DataFrame) -> Dict:\n\u001b[32m    496\u001b[39m \u001b[38;5;250m    \u001b[39m\u001b[33;03m\"\"\"\u001b[39;00m\n\u001b[32m    497\u001b[39m \u001b[33;03m    Get summary statistics specific to cleaned IRI sales data.\u001b[39;00m\n\u001b[32m    498\u001b[39m \u001b[33;03m    \u001b[39;00m\n\u001b[32m   (...)\u001b[39m\u001b[32m    503\u001b[39m \u001b[33;03m        Dict: Summary statistics for cleaned data\u001b[39;00m\n\u001b[32m    504\u001b[39m \u001b[33;03m    \"\"\"\u001b[39;00m\n\u001b[32m    505\u001b[39m     summary = {\n\u001b[32m    506\u001b[39m         \u001b[33m'\u001b[39m\u001b[33mtotal_records\u001b[39m\u001b[33m'\u001b[39m: \u001b[38;5;28mlen\u001b[39m(df),\n\u001b[32m    507\u001b[39m         \u001b[33m'\u001b[39m\u001b[33mdate_range\u001b[39m\u001b[33m'\u001b[39m: {\n\u001b[32m    508\u001b[39m             \u001b[33m'\u001b[39m\u001b[33mstart\u001b[39m\u001b[33m'\u001b[39m: df[\u001b[33m'\u001b[39m\u001b[33mdate\u001b[39m\u001b[33m'\u001b[39m].min(),\n\u001b[32m    509\u001b[39m             \u001b[33m'\u001b[39m\u001b[33mend\u001b[39m\u001b[33m'\u001b[39m: df[\u001b[33m'\u001b[39m\u001b[33mdate\u001b[39m\u001b[33m'\u001b[39m].max(),\n\u001b[32m    510\u001b[39m             \u001b[33m'\u001b[39m\u001b[33mtotal_weeks\u001b[39m\u001b[33m'\u001b[39m: df[\u001b[33m'\u001b[39m\u001b[33mdate\u001b[39m\u001b[33m'\u001b[39m].nunique()\n\u001b[32m    511\u001b[39m         },\n\u001b[32m    512\u001b[39m         \u001b[33m'\u001b[39m\u001b[33mgeographic_coverage\u001b[39m\u001b[33m'\u001b[39m: {\n\u001b[32m    513\u001b[39m             \u001b[33m'\u001b[39m\u001b[33mregions\u001b[39m\u001b[33m'\u001b[39m: df[\u001b[33m'\u001b[39m\u001b[33mgeography\u001b[39m\u001b[33m'\u001b[39m].nunique(),\n\u001b[32m    514\u001b[39m             \u001b[33m'\u001b[39m\u001b[33munique_regions\u001b[39m\u001b[33m'\u001b[39m: \u001b[38;5;28mlist\u001b[39m(df[\u001b[33m'\u001b[39m\u001b[33mgeography\u001b[39m\u001b[33m'\u001b[39m].unique())\n\u001b[32m    515\u001b[39m         },\n\u001b[32m    516\u001b[39m         \u001b[33m'\u001b[39m\u001b[33mproduct_coverage\u001b[39m\u001b[33m'\u001b[39m: {\n\u001b[32m    517\u001b[39m             \u001b[33m'\u001b[39m\u001b[33mproducts\u001b[39m\u001b[33m'\u001b[39m: df[\u001b[33m'\u001b[39m\u001b[33mproduct_name\u001b[39m\u001b[33m'\u001b[39m].nunique(),\n\u001b[32m    518\u001b[39m             \u001b[33m'\u001b[39m\u001b[33msample_products\u001b[39m\u001b[33m'\u001b[39m: \u001b[38;5;28mlist\u001b[39m(df[\u001b[33m'\u001b[39m\u001b[33mproduct_name\u001b[39m\u001b[33m'\u001b[39m].unique()[:\u001b[32m5\u001b[39m])  \u001b[38;5;66;03m# First 5 products\u001b[39;00m\n\u001b[32m    519\u001b[39m         },\n\u001b[32m    520\u001b[39m         \u001b[33m'\u001b[39m\u001b[33msales_metrics\u001b[39m\u001b[33m'\u001b[39m: {\n\u001b[32m--> \u001b[39m\u001b[32m521\u001b[39m             \u001b[33m'\u001b[39m\u001b[33mtotal_quantity\u001b[39m\u001b[33m'\u001b[39m: \u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[33;43m'\u001b[39;49m\u001b[33;43mquantity_sold\u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[43m]\u001b[49m.sum(),\n\u001b[32m    522\u001b[39m             \u001b[33m'\u001b[39m\u001b[33mtotal_revenue\u001b[39m\u001b[33m'\u001b[39m: df[\u001b[33m'\u001b[39m\u001b[33mrevenue\u001b[39m\u001b[33m'\u001b[39m].sum(),\n\u001b[32m    523\u001b[39m             \u001b[33m'\u001b[39m\u001b[33mavg_unit_price\u001b[39m\u001b[33m'\u001b[39m: df[\u001b[33m'\u001b[39m\u001b[33munit_price\u001b[39m\u001b[33m'\u001b[39m].mean(),\n\u001b[32m    524\u001b[39m             \u001b[33m'\u001b[39m\u001b[33mprice_range\u001b[39m\u001b[33m'\u001b[39m: {\n\u001b[32m    525\u001b[39m                 \u001b[33m'\u001b[39m\u001b[33mmin\u001b[39m\u001b[33m'\u001b[39m: df[\u001b[33m'\u001b[39m\u001b[33munit_price\u001b[39m\u001b[33m'\u001b[39m].min(),\n\u001b[32m    526\u001b[39m                 \u001b[33m'\u001b[39m\u001b[33mmax\u001b[39m\u001b[33m'\u001b[39m: df[\u001b[33m'\u001b[39m\u001b[33munit_price\u001b[39m\u001b[33m'\u001b[39m].max()\n\u001b[32m    527\u001b[39m             }\n\u001b[32m    528\u001b[39m         },\n\u001b[32m    529\u001b[39m         \u001b[33m'\u001b[39m\u001b[33mdata_quality\u001b[39m\u001b[33m'\u001b[39m: {\n\u001b[32m    530\u001b[39m             \u001b[33m'\u001b[39m\u001b[33mmissing_values\u001b[39m\u001b[33m'\u001b[39m: df.isnull().sum().to_dict(),\n\u001b[32m    531\u001b[39m             \u001b[33m'\u001b[39m\u001b[33mzero_quantities\u001b[39m\u001b[33m'\u001b[39m: (df[\u001b[33m'\u001b[39m\u001b[33mquantity_sold\u001b[39m\u001b[33m'\u001b[39m] == \u001b[32m0\u001b[39m).sum(),\n\u001b[32m    532\u001b[39m             \u001b[33m'\u001b[39m\u001b[33mnegative_prices\u001b[39m\u001b[33m'\u001b[39m: (df[\u001b[33m'\u001b[39m\u001b[33munit_price\u001b[39m\u001b[33m'\u001b[39m] <= \u001b[32m0\u001b[39m).sum()\n\u001b[32m    533\u001b[39m         }\n\u001b[32m    534\u001b[39m     }\n\u001b[32m    536\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m summary\n\n\u001b[36mFile \u001b[39m\u001b[32m~\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pandas\\core\\frame.py:4107\u001b[39m, in \u001b[36mDataFrame.__getitem__\u001b[39m\u001b[34m(self, key)\u001b[39m\n\u001b[32m   4105\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m.columns.nlevels > \u001b[32m1\u001b[39m:\n\u001b[32m   4106\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m._getitem_multilevel(key)\n\u001b[32m-> \u001b[39m\u001b[32m4107\u001b[39m indexer = \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mcolumns\u001b[49m\u001b[43m.\u001b[49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   4108\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[32m   4109\u001b[39m     indexer = [indexer]\n\n\u001b[36mFile \u001b[39m\u001b[32m~\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3819\u001b[39m, in \u001b[36mIndex.get_loc\u001b[39m\u001b[34m(self, key)\u001b[39m\n\u001b[32m   3814\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(casted_key, \u001b[38;5;28mslice\u001b[39m) \u001b[38;5;129;01mor\u001b[39;00m (\n\u001b[32m   3815\u001b[39m         \u001b[38;5;28misinstance\u001b[39m(casted_key, abc.Iterable)\n\u001b[32m   3816\u001b[39m         \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28many\u001b[39m(\u001b[38;5;28misinstance\u001b[39m(x, \u001b[38;5;28mslice\u001b[39m) \u001b[38;5;28;01mfor\u001b[39;00m x \u001b[38;5;129;01min\u001b[39;00m casted_key)\n\u001b[32m   3817\u001b[39m     ):\n\u001b[32m   3818\u001b[39m         \u001b[38;5;28;01mraise\u001b[39;00m InvalidIndexError(key)\n\u001b[32m-> \u001b[39m\u001b[32m3819\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01merr\u001b[39;00m\n\u001b[32m   3820\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[32m   3821\u001b[39m     \u001b[38;5;66;03m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[32m   3822\u001b[39m     \u001b[38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[32m   3823\u001b[39m     \u001b[38;5;66;03m#  the TypeError.\u001b[39;00m\n\u001b[32m   3824\u001b[39m     \u001b[38;5;28mself\u001b[39m._check_indexing_error(key)\n\n\u001b[31mKeyError\u001b[39m: 'quantity_sold'\n\n",
      "return_code": 1
    }
  ],
  "timestamp": "2025-06-24T09:35:28.928706"
}